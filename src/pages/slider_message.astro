---
import * as dotenv from "dotenv"
dotenv.config()

const minsaka = await fetch(process.env.PUBLIC_MINSAKA_COMMENTS_URL);
const lp = await fetch(process.env.PUBLIC_LP_COMMENTS_URL);

const dataMinsaka = await minsaka.json();
const dataMinsakaFiltered = dataMinsaka.filter( function( item ) {
  return (item[0] != "" && item[1] != "" && item[2] != "") ;
})

const dataLp = await lp.json();
const dataLpFiltered = dataLp.filter( function( item ) {
  return (item[0] != "" && item[1] != "" && item[2] != "") ;
})

const combinedMessage = Object.assign(dataMinsakaFiltered, dataLpFiltered);
combinedMessage.sort(function(a, b) {
	return b[0] - a[0];
});

---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&display=swap" rel="stylesheet">
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<div class="card__container">
			{combinedMessage.map((item)=>(
				<div class="card__prior">
					<p class="card__prior__body">{item[2]}</p>
					<p class="card__prior__name">{item[1]}</p>
					{item[3] == 'minsaka' &&
						<div class="card__prior__badge">
							<img src="/minsaka-logo.png" class="card__prior__badge__logo">
							<span>企画参加者</span>
						</div>
					}
				</div>
			))}
		</div>
	</body>
</html>

<style lang="scss">
	*,html,body {
		margin: 0;
		padding: 0;
		font-family: 'Noto Sans JP', sans-serif;
	}
	body {
		overflow: hidden;
	}
	.card__container {
		display: flex;
		flex-direction: row;
        overflow: visible;
		width: 100%;
		height: 100%;
		justify-content: left;

        animation: infinity-loop 60s infinite linear 1s both;

        @keyframes infinity-loop {
            from {
                transform: translateX(0vw);
            }
            to {
                transform: translateX(-3000px);
            }
        }
	}
	.card {
		&__prior {
			color: #333;
			font-size: 18px;
			display: flex;
			flex-direction: column;
			padding: 16px 24px 8px 24px;
			border: 2px solid #333;
			box-shadow: 3px 3px 0px rgb(0 0 0 / 20%);
			background-color: #ffffff;
			border-radius: 16px;
			margin: 16px;

			@media screen and (max-width: 540px) {
				padding: 10px 12px 4px 12px;
				width: 200px;
				margin: 0 8px;
			}


			p {
				font-size: 14px;
				margin: 0;
				letter-spacing: 0.02em;

				@media screen and (max-width: 540px) {
					font-size: 12px;
				}
			}
			&__body {
                width: 200px;
				color: #333333;
                font-weight: bold;
				margin-bottom: 10px!important;
				overflow: hidden;
				display: -webkit-box;
				-webkit-box-orient: vertical;
				-webkit-line-clamp: 3;
				text-overflow: clip;
			}
			&__name {
				color: #777777;
				margin-bottom: 6px!important;
				overflow: hidden;
				display: -webkit-box;
				-webkit-box-orient: vertical;
				-webkit-line-clamp: 1;
				text-overflow: clip;
			}
			&__badge {
				display: flex;
				align-items: center;
				justify-content: center;
				width: fit-content;
				background: #efefef;
				padding: 2px 10px;
				border-radius: 50px;
			
				&__logo {
					width: auto;
					height: 14px;
					margin-right: 8px;
				}
				span {
					font-size: 12px;
					color: #585858;
				}
			}
		}
	}
</style>
